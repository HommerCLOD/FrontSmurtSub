Index: src/app/modules/registration/registration/registration.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/modules/registration/registration/registration.component.html	(date 1607520226813)
+++ src/app/modules/registration/registration/registration.component.html	(date 1607520226813)
@@ -0,0 +1,106 @@
+<div class="login-dark">
+  <form [formGroup]="registrationForm" (submit)="postDataForRegistration()">
+
+    <div
+      [ngClass]="(registrationForm.controls.username.invalid) ? 'error' : 'form-group' ">
+      <label for="username"> UserName </label>
+      <br/>
+      <input id="username" class="form-control" type="text" formControlName="username"
+             placeholder="UserName">
+    </div>
+
+    <br/>
+
+
+    <div
+      [ngClass]="(registrationForm.controls.email.invalid) ? 'error' : 'form-group' ">
+      <label for="email"> Email </label>
+      <br/>
+      <input id="email" class="form-control" type="email" formControlName="email" placeholder=" Email">
+    </div>
+
+    <br/>
+
+    <div
+        [ngClass]="(registrationForm.controls.password.invalid) ? 'error' : 'form-group' ">
+      <label for="password"> Password </label>
+      <br/>
+      <input id="password" class="form-control" type="password" formControlName="password" placeholder="Password">
+    </div>
+
+    <br/>
+
+    <div
+      [ngClass]="registrationForm.controls.password.touched && (registrationForm.controls.password.value != registrationForm.controls.rPassword.value
+              || registrationForm.controls.password.invalid || registrationForm.controls.rPassword .invalid) ? 'error' : 'form-group' ">
+
+    <label for="rPassword">Repeat password </label>
+      <br/>
+      <input id="rPassword" class="form-control" type="password" formControlName="rPassword"
+             placeholder="Repeat password">
+    </div>
+
+
+    <br/>
+    <div class="form-group">
+      <button [disabled]="registrationForm.invalid " class="btn btn-primary btn-block" type="submit">Sign Up</button>
+    </div>
+    <br/>
+<!--    <a (click)="navigate()" class="forgot cursor">Forgot your email or password?</a>-->
+
+
+<!--    <div>-->
+<!--      Password: {{registrationForm.controls.password.value |json}}-->
+<!--      <br/>-->
+
+<!--      DPassword: {{registrationForm.controls.rPassword.value |json}}-->
+<!--      <br/>-->
+<!--      Boolean: {{registrationForm.controls.rPassword.value!= registrationForm.controls.password.value}}-->
+<!--    </div>-->
+
+
+
+
+    <!--    <div-->
+    <!--      [ngClass]="(registrationForm.controls.mail.invalid) ? 'error' : 'form-group' ">-->
+    <!--      <input class="form-control" type="text" formControlName="mail" placeholder="Email">-->
+    <!--    </div>-->
+
+    <!--    <div-->
+    <!--      [ngClass]="(registrationForm.controls.password.invalid) ? 'error' : 'form-group' ">-->
+    <!--      <input class="form-control" type="password" formControlName="password"-->
+    <!--             placeholder="Password">-->
+    <!--    </div>-->
+
+    <!--        <div-->
+    <!--          [ngClass] ="registrationForm.controls.password.touched && (registrationForm.controls.password.value != registrationForma.controls.duplicate_password.value-->
+    <!--          || registrationForm.controls.password.invalid || registrationForm.controls.duplicate_password.invalid) ? 'error' : 'form-group' ">-->
+
+    <!--          <input class="form-control" type="password" formControlName="duplicate_password"-->
+    <!--                 placeholder="Dublicate password">-->
+    <!--        </div>-->
+
+    <!--    <div-->
+    <!--      [ngClass]="(registrationForm.controls.name_surname.invalid) ? 'error' : 'form-group' ">-->
+    <!--      <input class="form-control" type="text" formControlName="name_surname"-->
+    <!--             placeholder="Name and Surname">-->
+    <!--    </div>-->
+
+    <!--    <div-->
+    <!--      [ngClass]="(registrationForm.controls.age.invalid) ? 'error' : 'form-group' ">-->
+    <!--      <input class="form-control" type="text" formControlName="age"-->
+    <!--             placeholder="Age">-->
+    <!--    </div>-->
+
+    <!--    <div>-->
+    <!--      <div class="select mt-2 ml-3 lightSilver opacity09">-->
+    <!--        <label class="lighter mr-2">Sex </label>-->
+    <!--        <select formControlName="sex">-->
+    <!--          <option >Man</option>-->
+    <!--          <option>Woman ❤️‍</option>-->
+    <!--        </select>-->
+    <!--      </div>-->
+    <!--    </div>-->
+
+  </form>
+</div>
Index: src/app/modules/registration/registration/registration.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/modules/registration/registration/registration.component.ts	(date 1607521539025)
+++ src/app/modules/registration/registration/registration.component.ts	(date 1607521539025)
@@ -0,0 +1,41 @@
+import {Component, OnInit} from '@angular/core';
+import {AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators} from '@angular/forms';
+import {RegistrationService} from '../services/registration.service';
+import {Router} from '@angular/router';
+// import custom validator to validate that password and confirm password fields match
+import {MustMatch} from '../validators/must-match.validator';
+
+@Component({
+  selector: 'app-registration',
+  templateUrl: './registration.component.html',
+  styleUrls: ['./registration.component.css']
+})
+export class RegistrationComponent implements OnInit {
+
+  public registrationForm: FormGroup;
+
+  constructor(private formBuilder: FormBuilder, private registrationService: RegistrationService, private router: Router) {
+  }
+
+  ngOnInit(): void {
+    this.registrationForm = this.formBuilder.group(
+      {
+        username: ['', [Validators.minLength(4), Validators.maxLength(32), Validators.required]],
+        email: ['', [Validators.email, Validators.required]],
+        password: ['', [Validators.minLength(8), Validators.required, Validators.maxLength(32)]],
+        rPassword: ['', [Validators.minLength(8), Validators.required, Validators.maxLength(32)]],
+      }, {
+        validator: MustMatch('password', 'rPassword')
+      }
+    );
+  }
+
+
+  navigate(): void {
+    this.router.navigate(['/reset-password']);
+  }
+
+  postDataForRegistration(): void {
+    this.registrationService
+  }
+}
diff --git src/app/modules/registration/registration/registration.component.css src/app/modules/registration/registration/registration.component.css
new file mode 100644
